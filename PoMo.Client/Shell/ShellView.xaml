<Window x:Class="PoMo.Client.Shell.ShellView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:controls="clr-namespace:PoMo.Client.Controls"
    xmlns:shell="clr-namespace:PoMo.Client.Shell"
    Height="600" Width="800" Icon="/Resources/wallet.ico" 
    TextOptions.TextFormattingMode="Display" Title="PoMo"
    mc:Ignorable="d">
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Style.Resources>
                <Style TargetType="{x:Type ToolTip}">
                    <Setter Property="FontFamily" Value="Segoe UI" />
                    <Setter Property="FontSize" Value="12" />
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=(SystemParameters.IsGlassEnabled)}" Value="True">
                    <Setter Property="WindowChrome.WindowChrome">
                        <Setter.Value>
                            <WindowChrome GlassFrameThickness="-1" UseAeroCaptionButtons="True"  ResizeBorderThickness="6" NonClientFrameEdges="None" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <AdornerDecorator>
                            <Grid>
                                <Border x:Name="classicBorder" Background="{TemplateBinding Background}" Visibility="Collapsed" />
                                <Border x:Name="contentBorder">
                                    <ContentPresenter />
                                </Border>
                            </Grid>
                        </AdornerDecorator>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding WindowState, RelativeSource={RelativeSource Self}}" Value="Normal" />
                                    <Condition Binding="{Binding Path=(SystemParameters.IsGlassEnabled)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Margin" Value="0,8,0,0" TargetName="contentBorder" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding WindowState, RelativeSource={RelativeSource Self}}" Value="Normal" />
                                    <Condition Binding="{Binding Path=(SystemParameters.IsGlassEnabled)}" Value="True" />
                                    <Condition Binding="{Binding Version.Major, Source={x:Static system:Environment.OSVersion}}" Value="6" />
                                    <Condition Binding="{Binding Version.Minor, Source={x:Static system:Environment.OSVersion}}" Value="1" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Margin" Value="5,8,5,5" TargetName="contentBorder" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding WindowState, RelativeSource={RelativeSource Self}}" Value="Maximized" />
                                    <Condition Binding="{Binding Path=(SystemParameters.IsGlassEnabled)}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Margin" Value="8" TargetName="contentBorder" />
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding Path=(SystemParameters.IsGlassEnabled)}" Value="False">
                                <Setter Property="Visibility" TargetName="classicBorder" Value="Visible" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="MenuResources.xaml" />
                <ResourceDictionary Source="StatusBarResources.xaml" />
                <ResourceDictionary Source="TabControlResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <x:Array Type="system:String" x:Key="Portfolios">
                <system:String>Portfolio 1</system:String>
                <system:String>Portfolio 2</system:String>
                <system:String>Portfolio 3</system:String>
                <system:String>Portfolio 4</system:String>
            </x:Array>
        </ResourceDictionary>
    </Window.Resources>
    <Grid d:DataContext="{d:DesignInstance {x:Type shell:ShellViewModel}}">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TabControl x:Name="TabControl" SelectionChanged="TabControl_SelectionChanged" shell:ShellViewTearOffHandler.IsLocked="{Binding IsLocked}" controls:TabTearOffBehavior.Handler="{Binding TabTearOffHandler}">
            <shell:ShellView.PreTabContent>
                <Menu x:Name="AppMenu" Background="Transparent" Margin="2,0,2,2" HorizontalAlignment="Left">
                    <MenuItem Header="{Binding Title, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" BorderBrush="Gray"
                        BorderThickness="1,0,1,1" x:Name="ApplicationMenuItem" Style="{StaticResource ApplicationMenuStyle}" VerticalAlignment="Top">
                        <MenuItem Header="_Portfolio" ToolTip="Create a tab to display a Portfolio view" ItemsSource="{Binding Source={StaticResource Portfolios}}">
                            <MenuItem.Icon>
                                <Image Source="pack://application:,,,/Resources/new_tab.png" Width="16" Height="16" SnapsToDevicePixels="True" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                    RenderOptions.BitmapScalingMode="NearestNeighbor" />
                            </MenuItem.Icon>
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                    <Setter Property="Header" Value="{Binding}" />
                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                    <Setter Property="Command" Value="{x:Static shell:ShellView.CreatePortfolioViewCommand}" />
                                    <Setter Property="ToolTip" Value="{Binding Header, RelativeSource={RelativeSource Self}}" />
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                        <MenuItem Header="E_xit" Command="ApplicationCommands.Close" ToolTip="Exit the application">
                            <MenuItem.Icon>
                                <Image Source="pack://application:,,,/PoMo.Client;component/Resources/exit.png" Height="16" Width="16" SnapsToDevicePixels="True" 
                                    VerticalAlignment="Center" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="NearestNeighbor" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                </Menu>
            </shell:ShellView.PreTabContent>
        </TabControl>
        <StatusBar Grid.Row="1">
            <StatusBarItem>
                <TextBlock Text="{Binding ConnectionStatus}" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
